#
# sc.conf - configuration file for shaper control tool
#

# Location of executables
tc = /sbin/tc
# iptables and ipset are required when filter_method = flow
#iptables = /sbin/iptables
#ipset = /sbin/ipset

# Network interfaces
#
# out_if is connected to the upstream router
# in_if is connected to your network
#
# Possible values: interface name or "disable" keyword, which disables rule
# generation for a specified traffic direction.
out_if = eth0
in_if = eth1

# Traffic filtering method
#
# u32 - u32 hashing filters
# flow - flow classifier and ipset
filter_method = u32

# Rate limiting method
#
# Possible values: shaping, policing or hybrid
#
# Policing can be used only when filter_method = u32.
# Hybrid method uses shaping for download and policing for upload, and all
# the rules are created only for the in_if interface.
limit_method = shaping

# Debugging mode
#
# 0 - no debugging
# 1 - print command line that caused error
# 2 - just print command line without execution
debug = 0

# Message verbosity
#
# 0 - no verbose messages
# 1 - enable verbose messages (i.e. for results of `sync' command)
# 2 - disable usage of tc(8) and ipset(8) batch rule loading
# 3 - do 1 + 2
verbose = 0

# Suppress output (boolean)
quiet = 0

# Colored output (boolean)
colored = 1

# Edit both rules and database entries using add/del/change commands (boolean)
joint = 0

# Network list for classid calculation
#
# Allowed numbers of tc classids are 2--ffff, so the total number of hosts in
# specified networks should be 65534 or less. E.g. allowed only one /16
# network, two /17 networks, and so on. Note, that `flow' classifier works
# only with a single /16 network. Different networks are allowed only when
# filter_method = u32.
#
# Allowed masks: 16-31
network = 10.0.0.0/20 10.0.254.0/24 172.16.0.0/20

# Network list for hashing filters generation
# Default value: same as "network"
#
# Principle is the same as for the route aggregation: one can specify a
# large network (e.g. 10.0.0.0/16), which includes a few smaller subnets
# (10.0.0.0/20 and 10.0.254.0/24).
#
# For simplicity of filter hash table numbers calculation, the maximum number
# of different entries in this list is set to 255.
#
# Allowed masks: 16-31
#
#filter_network = $network
filter_network = 10.0.0.0/16 172.16.0.0/20

# Internal networks, whose traffic is transmitted without shaping
#
# Default value: <empty string>
# Allowed masks: 8-32
#bypass_int = 172.16.19.0/24 172.16.128.0/24

# External networks, whose traffic is transmitted without shaping
#
# Default value: <empty string>
# Allowed masks: 8-32
#bypass_ext = 1.1.1.1/24

# Ratio between the size of policer buffer size and bandwidth rate
#
# Default value: 0.1
policer_burst_ratio = 0.1

# Amount of bytes a stream is allowed to dequeue before the next queue gets a
# turn.
#
# Default value: default MTU size for Ethernet (1500 bytes).
# Warning: don't use values below the MTU size!
quantum = 1500

# Default rate unit
rate_unit = kibit

# Ratio between bandwidth rates in rules and in the database.
#  rule_rate = db_rate * rate_ratio
#
# This coefficient is used only for B<load> and B<sync> commands.
# Default value: 1.0.
# Possible values: any rational number.
rate_ratio = 1.0

# Classless leaf qdisc with parameters
leaf_qdisc = "pfifo limit 50"

#
# ipset and iptables
#

# Name of set with allowed IP's
#set_name = pass

# Type of set
#
# ipmap  - stores IPs from single /16 network (faster)
# iphash - stores IPs from different networks
#set_type = ipmap

# Size of iphash set
#set_size = 65536

# Name of iptables chain that will contain rules for shaped IPs
#
# NOTE: For names other than FORWARD the new chain will be created and
# attached to FORWARD chain.
#chain = FORWARD

#
# Database
#

# Driver
#
# Possible values: SQLite, mysql, Pg, Oracle.
# Requires corresponding DBD module.
# Use 'sc help' command to show available database drivers.
db_driver = SQLite

# Host
db_host = 127.0.0.1

# Database name (or filename for SQLite driver)
db_name = /etc/sc/sc.db

# Username
db_user = username

# Password
db_pass = password

# Database queries
query_create = "CREATE TABLE rates (ip UNSIGNED INTEGER PRIMARY KEY, rate UNSIGNED INTEGER NOT NULL)"
query_load = "SELECT ip,rate FROM rates"
query_list = "SELECT ip,rate FROM rates WHERE ip=?"
query_add = "INSERT OR REPLACE INTO rates VALUES (?, ?)"
query_del = "DELETE FROM rates WHERE ip=?"
query_change = "REPLACE INTO rates VALUES (?, ?)"

#
# Logging
#

# Output errors and warnings to syslog
syslog = 0

# syslog options (comma-separated)
#
# ndelay  - open the connection immediately
# nofatal - just emit warnings instead of dying if the connection to syslog
#           can't be established
# perror  - write the message to standard error output as well to the syslog
# pid     - include PID with each message
#syslog_options = ''

# facility
#syslog_facility = user

