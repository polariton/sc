#
# sc.conf - configuration file for Shaper Control Tool
#

# Location of tc binary
tc = /sbin/tc

# Network interfaces
#
# out_if is connected to the upstream router
# in_if is connected to your network
#
# Possible values: interface name or "disable" keyword, which disables rule
# generation for a specified traffic direction.
out_if = eth0
in_if = eth1

# Rate limiting method
#
# Possible values: shaping, policing or hybrid
#
# Policing can be used only when filter_method = u32.
# Hybrid method uses shaping for download and policing for upload, and all
# the rules are created only for the in_if interface.
limit_method = shaping

# Debugging mode
#
# 0 - no debugging
# 1 - print command line that caused error
# 2 - just print command line without execution
debug = 0

# Message verbosity
#
# Possible values:
# 0 - no verbose messages
# 1 - enable verbose messages (i.e. for results of `sync' command)
# 2 - disable usage of tc(8) and ipset(8) batch rule loading
# 3 - do 1 + 2
verbose = 0

# Suppress output (boolean)
quiet = 0

# Colored output (boolean)
colored = 1

# Edit both rules and database entries using add/del/change commands (boolean)
joint = 0

# Network list for classid calculation
#
# Allowed numbers of tc classids are 2--fffd, so the total number of hosts in
# the specified networks should be 65533 or less. E.g. it is allowed to use
# only one /16 network, two /17 networks, and so on.
#
# Possible values: space-separated list of networks with the masks 16-31
network = 10.0.0.0/16

# Network list for hashing filters generation
#
# The principle is the same as for route aggregation: one can specify a large
# network (e.g. 10.0.0.0/16), which includes a few smaller subnets
# (10.0.0.0/20 and 10.0.254.0/24).
#
# For simplicity of filter hash table numbers calculation, the maximum number
# of different entries in this list is set to 255.
#
# Possible values: space-separated list of networks with the masks 16-31
# Default value: same as 'network'
filter_network = $network

# Default traffic policy
#
# Possible values: block or pass
# Default value: block
default_policy = block

# Rate and ceil for default class. Applicable, when default_policy = pass.
#
# Possible values: any tc-compatible rate with units
# Default value: 1gibit
default_rate = 1gibit
default_ceil = $default_rate

# Internal networks, whose traffic is transmitted without shaping
#
# Possile values: space-separated list of networks
# Default value: <empty string>
#bypass_int = 10.0.254.0/24

# External networks, whose traffic is transmitted without shaping
#
# Default value: <empty string>
# Allowed values: space-separated list of networks
#bypass_ext = 1.1.1.1/24

# Ratio between the size of policer buffer size and bandwidth rate
#
# Possible values: any rational number.
# Default value: 0.1.
# Warning: always test the resulting bandwidth. If the buffer size is too
# large or too small, you may not obtain the correct rates.
policer_burst_ratio = 0.1

# Amount of bytes a stream is allowed to dequeue before the next queue gets a
# turn. Specific parameter for HTB qdisc.
#
# Default value: default MTU size for Ethernet (1500 bytes).
# Warning: don't use the values below the MTU size!
quantum = 1500

# Default rate unit
#
# Default value: kibit.
# Possible values: see sc(8) or tc(8) manpage.
rate_unit = kibit

# Ratio between bandwidth rates in rules and in the database.
#  rule_rate = db_rate * rate_ratio
#
# This coefficient is used only for B<load> and B<sync> commands.
# Default value: 1.0.
# Possible values: any rational number.
rate_ratio = 1.0

# Classful root qdisc
#
# Default value: htb
# Possible values: htb or hfsc.
root_qdisc = htb

# Classless leaf qdisc
#
# Default value: "pfifo limit 100".
# Possible values: any classless qdisc with parameters.
leaf_qdisc = "pfifo limit 100"

# Database parameters
[db]
	# Database driver
	#
	# Possible values: any installed DBD driver (e.g. SQLite, mysql, Pg)
	# Use 'sc help' command to show available drivers.
	# Default value: SQLite
	driver = SQLite

	# Host
	#
	# Possible values: any IPv4 address
	# Default value: 127.0.0.1
	host = 127.0.0.1

	# Database name (or filename for some drivers)
	name = /etc/sc/sc.db

	user = username
	pass = password

# Database queries
[query]
	create = 'CREATE TABLE rates (ip UNSIGNED INTEGER PRIMARY KEY, rate UNSIGNED INTEGER NOT NULL)'
	load = 'SELECT ip,rate FROM rates'
	list = 'SELECT ip,rate FROM rates WHERE ip=?'
	add = 'INSERT OR REPLACE INTO rates VALUES (?, ?)'
	del = 'DELETE FROM rates WHERE ip=?'
	change = 'REPLACE INTO rates VALUES (?, ?)'


[syslog]
	# Output errors and warnings to syslog (boolean)
	enable = 0

	# syslog options (comma-separated)
	#
	# ndelay  - open the connection immediately
	# nofatal - just emit warnings instead of dying if the connection to syslog
	#           can't be established
	# perror  - write the message to standard error output as well to the syslog
	# pid     - include PID with each message
	options = 'ndelay'

	# facility
	facility = user

